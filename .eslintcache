[{"C:\\Users\\Michael\\OneDrive\\Spotify-Data\\spotify-data\\src\\index.js":"1","C:\\Users\\Michael\\OneDrive\\Spotify-Data\\spotify-data\\src\\App.js":"2","C:\\Users\\Michael\\OneDrive\\Spotify-Data\\spotify-data\\src\\Login.js":"3","C:\\Users\\Michael\\OneDrive\\Spotify-Data\\spotify-data\\src\\UserProfile.js":"4","C:\\Users\\Michael\\OneDrive\\Spotify-Data\\spotify-data\\src\\Navbar.js":"5","C:\\Users\\Michael\\OneDrive\\Spotify-Data\\spotify-data\\src\\TopUserItems.js":"6","C:\\Users\\Michael\\OneDrive\\Spotify-Data\\spotify-data\\src\\PopularityChart.js":"7","C:\\Users\\Michael\\OneDrive\\Spotify-Data\\spotify-data\\src\\List.js":"8","C:\\Users\\Michael\\Documents\\GitHub\\Spotify-Data\\src\\index.js":"9","C:\\Users\\Michael\\Documents\\GitHub\\Spotify-Data\\src\\App.js":"10","C:\\Users\\Michael\\Documents\\GitHub\\Spotify-Data\\src\\Navbar.js":"11","C:\\Users\\Michael\\Documents\\GitHub\\Spotify-Data\\src\\TopUserItems.js":"12","C:\\Users\\Michael\\Documents\\GitHub\\Spotify-Data\\src\\Login.js":"13","C:\\Users\\Michael\\Documents\\GitHub\\Spotify-Data\\src\\List.js":"14","C:\\Users\\Michael\\Documents\\GitHub\\Spotify-Data\\src\\PopularityChart.js":"15","C:\\Users\\Michael\\Documents\\GitHub\\Spotify-Data\\src\\Reccomendations.js":"16"},{"size":433,"mtime":1608052729455,"results":"17","hashOfConfig":"18"},{"size":1956,"mtime":1608326960403,"results":"19","hashOfConfig":"18"},{"size":9470,"mtime":1608327472402,"results":"20","hashOfConfig":"18"},{"size":206,"mtime":1608328425365,"results":"21","hashOfConfig":"18"},{"size":824,"mtime":1608093864090,"results":"22","hashOfConfig":"18"},{"size":2812,"mtime":1608328073732,"results":"23","hashOfConfig":"18"},{"size":2756,"mtime":1608329202270,"results":"24","hashOfConfig":"18"},{"size":1921,"mtime":1608329604237,"results":"25","hashOfConfig":"18"},{"size":433,"mtime":1608052729455,"results":"26","hashOfConfig":"27"},{"size":2966,"mtime":1608618604820,"results":"28","hashOfConfig":"27"},{"size":1407,"mtime":1608618695551,"results":"29","hashOfConfig":"27"},{"size":3777,"mtime":1608597593339,"results":"30","hashOfConfig":"27"},{"size":9686,"mtime":1608618446995,"results":"31","hashOfConfig":"27"},{"size":5238,"mtime":1608611229730,"results":"32","hashOfConfig":"27"},{"size":2757,"mtime":1608598722675,"results":"33","hashOfConfig":"27"},{"size":2265,"mtime":1608608577142,"results":"34","hashOfConfig":"27"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"15vabdr",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1snd5mq",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"54"},"C:\\Users\\Michael\\OneDrive\\Spotify-Data\\spotify-data\\src\\index.js",[],["71","72"],"C:\\Users\\Michael\\OneDrive\\Spotify-Data\\spotify-data\\src\\App.js",[],"C:\\Users\\Michael\\OneDrive\\Spotify-Data\\spotify-data\\src\\Login.js",[],"C:\\Users\\Michael\\OneDrive\\Spotify-Data\\spotify-data\\src\\UserProfile.js",[],"C:\\Users\\Michael\\OneDrive\\Spotify-Data\\spotify-data\\src\\Navbar.js",[],"C:\\Users\\Michael\\OneDrive\\Spotify-Data\\spotify-data\\src\\TopUserItems.js",["73","74","75"],"C:\\Users\\Michael\\OneDrive\\Spotify-Data\\spotify-data\\src\\PopularityChart.js",[],"C:\\Users\\Michael\\OneDrive\\Spotify-Data\\spotify-data\\src\\List.js",["76","77","78"],"C:\\Users\\Michael\\Documents\\GitHub\\Spotify-Data\\src\\index.js",[],["79","80"],"C:\\Users\\Michael\\Documents\\GitHub\\Spotify-Data\\src\\App.js",[],"C:\\Users\\Michael\\Documents\\GitHub\\Spotify-Data\\src\\Navbar.js",[],"C:\\Users\\Michael\\Documents\\GitHub\\Spotify-Data\\src\\TopUserItems.js",["81","82","83"],"C:\\Users\\Michael\\Documents\\GitHub\\Spotify-Data\\src\\Login.js",[],"C:\\Users\\Michael\\Documents\\GitHub\\Spotify-Data\\src\\List.js",["84","85","86","87","88"],"\r\nimport React, {useState, useEffect} from 'react'\r\n\r\nexport default function List(props){\r\n    console.log(\"render list\")\r\n    return (\r\n        <div className=\"itemList\">\r\n            {props.search === \"Tracks\" && props.data.map((data, index) => <SongListItem song={data} key={index} index={index}/>)}\r\n            {props.search === \"Artists\" &&  props.data.map((data, index) => <ArtistListItem artist={data} key={index} index={index} accessToken={props.accessToken}/>)}\r\n        </div>\r\n    )\r\n}\r\nconst useAudio = url => {\r\n    if(url){\r\n\r\n    }\r\n    const [audio] = useState(new Audio(url));\r\n    const [playing, setPlaying] = useState(false);\r\n  \r\n    const toggle = () => setPlaying(!playing);\r\n  \r\n    useEffect(() => {\r\n       if(url) playing ? audio.play() : audio.pause();\r\n    }, [playing]);\r\n  \r\n    useEffect(() => {\r\n        if(url){\r\n            audio.addEventListener('ended', () => setPlaying(false));\r\n            return () => {\r\n                audio.removeEventListener('ended', () => setPlaying(false));\r\n            };\r\n        }\r\n    }, [audio]);\r\n  \r\n    return [playing, toggle];\r\n};\r\n\r\nconst useFetch = (url, options) => {\r\n    \r\n    const [response, setResponse] = React.useState(null);\r\n    const [error, setError] = React.useState(null);\r\n    React.useEffect(() => {\r\n      const fetchData = async () => {\r\n        try {\r\n          const res = await fetch(url, options);\r\n          const json = await res.json();\r\n          setResponse(json);\r\n        } catch (error) {\r\n          setError(error);\r\n        }\r\n      };\r\n      fetchData();\r\n    }, []);\r\n    return { response, error };\r\n};\r\n\r\nfunction SongListItem(props){\r\n    const {album, name, artists, preview_url} = props.song;\r\n    console.log(props.song);\r\n    const [playing, toggle] = useAudio(preview_url);\r\n    return (\r\n        <>\r\n        <div className=\"ListItem\"  onClick={toggle}>\r\n            <img src={album.images[0].url} width=\"100%\" className=\"songImg\" alt=\"album cover\"/>\r\n            \r\n            <div className=\"songInfo\">\r\n                {preview_url ? <i style={{margin: \"0 15px\", fontSize: \"clamp(20px, 3vw, 40px)\"}} className={!playing ? \"fas fa-play\" : \"fas fa-pause\"} /> : null}\r\n                <div style={{marginLeft: \"1em\", flexDirection: \"column\"}}>\r\n                    <h1 style={{fontSize: \"clamp(20px, 5vw, 40px)\"}}>{name}</h1>\r\n                    <h2 style={{fontSize: \"clamp(15px, 3vw, 30px)\"}}>By: {artists[0].name}</h2>\r\n                    <h2 style={{fontSize: \"clamp(15px, 3vw, 30px)\"}}>Album: {album.name}</h2>\r\n                </div>\r\n                <h1 style={{marginLeft:\"auto\", marginRight: \"15px\", fontSize: \"xxx-large\"}}>#{props.index+1}</h1>\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nfunction ArtistListItem(props){\r\n    const {name, popularity, images, id, followers, genres} = props.artist;\r\n    const [isClicked, setIsClicked] = useState(false);\r\n    const handleClick = () => {\r\n        setIsClicked(!isClicked);\r\n    }\r\n    const url = `https://api.spotify.com/v1/artists/${id}/related-artists`\r\n    const {response, error} = useFetch(url, {\r\n        method: \"GET\",\r\n        headers: {\r\n        \"Authorization\": \"Bearer \" + props.accessToken,\r\n        }\r\n    })\r\n    if(!response) return <div>Loading...</div>\r\n    else if(error) return <div>Error: {error.message}</div>\r\n    return (\r\n        <>\r\n        <div onClick={handleClick} className=\"ListItem\" style={{perspective: \"1000px\"}}>\r\n            <div className={!isClicked ? \"flipCardInner\" : \"flipCardInner rotateItem\"}>\r\n                <div className=\"flipCardFront\">\r\n                    <img src={images[0].url}  width=\"100%\" className=\"artistImg\" alt=\"artist image\"/>\r\n                    <div className=\"artistInfo\" >\r\n                        <div style={{marginLeft: \"1em\", flexDirection: \"column\"}}>\r\n                            <h1>{name}</h1>\r\n                            <h2>More Info <i style={{color: \"#1DB954\"}} className=\"far fa-arrow-alt-circle-right\"></i></h2>\r\n                        </div>\r\n                        <h1 style={{marginLeft:\"auto\", marginRight: \"1em\", fontSize: \"xxx-large\"}}>#{props.index+1}</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"flipCardBack\">\r\n                <img src={images[0].url}  width=\"100%\" className=\"artistImg\" alt=\"artist image\"/>\r\n                    <div className=\"backArtistInfo\">\r\n                        <h1 style={{fontSize: \"3em\"}}>{name}</h1>\r\n                        <h2>Followers: {followers.total}</h2>\r\n                        <h2>Popularity: {popularity} out of 100</h2>\r\n                        <h2>Genres: <span> {genres.map((genre, index) => index !== genres.length-1 ? `${genre}, ` :  genre)} </span></h2>\r\n                        <h2>Related Artists: \r\n                            <ul style={{listStyle: 'inside', textAlign: 'left', marginLeft: \"25%\", marginTop: \"0px\"}}>\r\n                                {response.artists.map((artist, index) => index < 5 ? <li key={index}>{artist.name}</li> : null)}\r\n                            </ul>\r\n                        </h2>\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>  \r\n        </>\r\n    )\r\n}","C:\\Users\\Michael\\Documents\\GitHub\\Spotify-Data\\src\\PopularityChart.js",[],"C:\\Users\\Michael\\Documents\\GitHub\\Spotify-Data\\src\\Reccomendations.js",["89","90","91"],"import React, {useEffect, useState} from 'react'\r\nimport List from \"./List\"\r\n\r\nconst useFetch = (url, options) => {\r\n    console.log(\"used fetch\")\r\n    const [response, setResponse] = React.useState(null);\r\n    const [error, setError] = React.useState(null);\r\n    React.useEffect(() => {\r\n      const fetchData = async () => {\r\n        try {\r\n          const res = await fetch(url, options);\r\n          const json = await res.json();\r\n          setResponse(json);\r\n        } catch (error) {\r\n          setError(error);\r\n        }\r\n      };\r\n      fetchData();\r\n    }, []);\r\n    return { response, error };\r\n};\r\n\r\nfunction Reccomendations(props) {//need ids\r\n    // const ids = []//props.songs.items.map((song, index) => index < 5 ? song.id : undefined);\r\n    // for(let i = 0; i < 1; i++){\r\n    //     ids.push(props.songs.items[i].id)\r\n    // }\r\n    // console.log(String(ids))\r\n    // const url = \"https://api.spotify.com/v1/recommendations?seed_tracks=\"\r\n    // const {reponse, error} = useFetch(url + String(ids), {\r\n    //     method: \"GET\",\r\n    //     headers: {\r\n    //     \"Authorization\": \"Bearer \" + props.accessToken,\r\n    //     }\r\n    // })\r\n    const [reccomendations, setReccomendations] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const ids = [];\r\n        for(let i = 0; i < 5; i++){\r\n            ids.push(props.songs.items[i].id)\r\n        }\r\n        const url = \"https://api.spotify.com/v1/recommendations?seed_tracks=\" + String(ids);\r\n        fetch(url, {\r\n            method: \"GET\",\r\n            headers: {\r\n            \"Authorization\": \"Bearer \" + props.accessToken,\r\n            }\r\n        })\r\n        .then(response => response.json())\r\n        .then(json => setReccomendations(json));\r\n    }, [props.songs.items])\r\n    if(!reccomendations) return <div>Loading...</div>\r\n    return (\r\n        <div style={{textAlign: 'center', color: \"#fff\", marginTop: \"calc(80px + 1em)\"}}>\r\n            {/* {console.log(reccomendations)} */}\r\n            <h1 style={{margin: \"1em 0\"}}>Songs you might like</h1>\r\n            <h3 style={{margin: \"0 0 1em 0\"}}>Based on your top 5 songs</h3>\r\n            <List data={reccomendations.tracks} search=\"Tracks\" accessToken={props.accessToken}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Reccomendations\r\n",{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":1,"column":16,"nodeType":"98","messageId":"99","endLine":1,"endColumn":24},{"ruleId":"96","severity":1,"message":"100","line":1,"column":26,"nodeType":"98","messageId":"99","endLine":1,"endColumn":35},{"ruleId":"96","severity":1,"message":"101","line":4,"column":10,"nodeType":"98","messageId":"99","endLine":4,"endColumn":16},{"ruleId":"96","severity":1,"message":"102","line":37,"column":18,"nodeType":"98","messageId":"99","endLine":37,"endColumn":28},{"ruleId":"96","severity":1,"message":"103","line":37,"column":38,"nodeType":"98","messageId":"99","endLine":37,"endColumn":40},{"ruleId":"104","severity":1,"message":"105","line":41,"column":13,"nodeType":"106","endLine":41,"endColumn":94},{"ruleId":"92","replacedBy":"107"},{"ruleId":"94","replacedBy":"108"},{"ruleId":"96","severity":1,"message":"97","line":1,"column":16,"nodeType":"98","messageId":"99","endLine":1,"endColumn":24},{"ruleId":"96","severity":1,"message":"100","line":1,"column":26,"nodeType":"98","messageId":"99","endLine":1,"endColumn":35},{"ruleId":"96","severity":1,"message":"101","line":4,"column":10,"nodeType":"98","messageId":"99","endLine":4,"endColumn":16},{"ruleId":"109","severity":1,"message":"110","line":24,"column":8,"nodeType":"111","endLine":24,"endColumn":17,"suggestions":"112"},{"ruleId":"109","severity":1,"message":"113","line":33,"column":8,"nodeType":"111","endLine":33,"endColumn":15,"suggestions":"114"},{"ruleId":"109","severity":1,"message":"115","line":53,"column":8,"nodeType":"111","endLine":53,"endColumn":10,"suggestions":"116"},{"ruleId":"104","severity":1,"message":"105","line":100,"column":21,"nodeType":"106","endLine":100,"endColumn":102},{"ruleId":"104","severity":1,"message":"105","line":110,"column":17,"nodeType":"106","endLine":110,"endColumn":98},{"ruleId":"96","severity":1,"message":"117","line":4,"column":7,"nodeType":"98","messageId":"99","endLine":4,"endColumn":15},{"ruleId":"109","severity":1,"message":"115","line":19,"column":8,"nodeType":"111","endLine":19,"endColumn":10,"suggestions":"118"},{"ruleId":"109","severity":1,"message":"119","line":52,"column":8,"nodeType":"111","endLine":52,"endColumn":27,"suggestions":"120"},"no-native-reassign",["121"],"no-negated-in-lhs",["122"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'render' is defined but never used.","'popularity' is assigned a value but never used.","'id' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement",["121"],["122"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'audio' and 'url'. Either include them or remove the dependency array.","ArrayExpression",["123"],"React Hook useEffect has a missing dependency: 'url'. Either include it or remove the dependency array.",["124"],"React Hook React.useEffect has missing dependencies: 'options' and 'url'. Either include them or remove the dependency array.",["125"],"'useFetch' is assigned a value but never used.",["126"],"React Hook useEffect has a missing dependency: 'props.accessToken'. Either include it or remove the dependency array.",["127"],"no-global-assign","no-unsafe-negation",{"desc":"128","fix":"129"},{"desc":"130","fix":"131"},{"desc":"132","fix":"133"},{"desc":"132","fix":"134"},{"desc":"135","fix":"136"},"Update the dependencies array to be: [audio, playing, url]",{"range":"137","text":"138"},"Update the dependencies array to be: [audio, url]",{"range":"139","text":"140"},"Update the dependencies array to be: [options, url]",{"range":"141","text":"142"},{"range":"143","text":"142"},"Update the dependencies array to be: [props.accessToken, props.songs.items]",{"range":"144","text":"145"},[791,800],"[audio, playing, url]",[1060,1067],"[audio, url]",[1576,1578],"[options, url]",[568,570],[1725,1744],"[props.accessToken, props.songs.items]"]
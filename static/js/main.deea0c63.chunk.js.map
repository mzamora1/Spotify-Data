{"version":3,"sources":["Navbar.js","Login.js","List.js","Reccomendations.js","PopularityChart.js","App.js","index.js"],"names":["Navbar","props","useState","isClicked","setIsClicked","handleClick","className","id","onClick","name","to","array","Array","fill","Login","useEffect","anime","timeline","duration","easing","add","targets","strokeDashoffset","setDashoffset","translateX","delay","stagger","start","opacity","translateY","width","autoplay","loop","endDelay","viewBox","preserveAspectRatio","maskUnits","x","y","height","d","stroke","strokeWidth","mask","window","location","href","map","a","index","src","style","left","Math","random","innerWidth","zIndex","alt","List","console","log","search","data","SongListItem","song","ArtistListItem","artist","accessToken","album","artists","preview_url","url","Audio","audio","playing","setPlaying","play","pause","addEventListener","removeEventListener","useAudio","toggle","images","margin","fontSize","marginLeft","flexDirection","marginRight","popularity","followers","genres","options","React","response","setResponse","error","setError","fetch","res","json","fetchData","useFetch","method","headers","message","perspective","color","total","genre","length","listStyle","textAlign","marginTop","Reccomendations","reccomendations","setReccomendations","ids","i","push","songs","items","String","then","tracks","Chart","defaults","global","defaultFontColor","PopularityChart","canvasRef","createRef","this","sort","b","popularityData","artistNames","colors","hue","lightness","forEach","chart","current","type","datasets","backgroundColor","barThickness","labels","responsive","maintainAspectRatio","legend","display","scales","yAxes","ticks","min","max","padding","xAxes","title","text","tooltips","destroy","ref","Component","App","access_token","setAccess_token","setSongs","setArtists","hashes","hash","substring","split","basename","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.deea0c63.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction Navbar(props) {\r\n    const [isClicked, setIsClicked] = useState(false);\r\n    function handleClick(){\r\n        setIsClicked(!isClicked);\r\n    }\r\n    return (\r\n        <header>\r\n            <div className=\"logo\" >Spotify Data</div>\r\n            \r\n            <div className=\"hamburger\" id=\"hamburger\" onClick={handleClick}>\r\n                <div className={isClicked ? \"line rotateLeft\":\"line\"}></div>\r\n                <div className={isClicked ? \"line remove\":\"line\"}></div>\r\n                <div className={isClicked ? \"line rotateRight\":\"line\"}></div>\r\n            </div>\r\n    \r\n            <nav>    \r\n                <ul className={isClicked ? \"list open\":\"list\"} >\r\n                    <li className=\"list-item\" name=\"top songs\">\r\n                        <Link to=\"/\" onClick={handleClick}>Top Songs</Link>\r\n                    </li>\r\n                    <li className=\"list-item\" name=\"top artists\">\r\n                        <Link to=\"/topArtists\" onClick={handleClick}>Top Artists</Link>\r\n                    </li>\r\n                    <li className=\"list-item\" name=\"my account\">\r\n                        <Link to=\"/reccomendations\" onClick={handleClick}>Reccomendations</Link>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React, { useEffect } from 'react';\r\nimport anime from 'animejs';\r\n\r\nlet array = Array(40); //will be used to generate floating bubbles\r\narray.fill(1); //must fill with values or else map will not work\r\n\r\nfunction Login() {\r\n    function redirect(){\r\n        window.location.href = \"https://accounts.spotify.com/authorize?client_id=b48ae6f543f941a5be1084b45ed74b13&redirect_uri=https://mzamora1.github.io/Spotify-Data/&scope=user-top-read&response_type=token\";\r\n        //window.location.href = \"https://accounts.spotify.com/authorize?client_id=b48ae6f543f941a5be1084b45ed74b13&redirect_uri=http://localhost:3000/Spotify-Data/&scope=user-top-read&response_type=token\"\r\n    }\r\n    useEffect(()=>{\r\n        anime.timeline({\r\n            duration: 800,\r\n            easing: \"easeInOutSine\",\r\n        })\r\n        .add({\r\n            targets: \"path\",\r\n            strokeDashoffset: [anime.setDashoffset, 0],\r\n            translateX: [-10, 10],\r\n            fill: \"#1DB954\",\r\n            delay: anime.stagger(150, {start: -1500})\r\n        })\r\n        .add({\r\n            targets: \"#loginBtn\",\r\n            translateX: [-10, 10],\r\n            opacity: [0, 1]\r\n        }, \"-=400\")\r\n\r\n    }, []);\r\n\r\n    useEffect(()=> {\r\n        anime({\r\n            targets: \"img\",\r\n            translateY: \"-100vh\",\r\n            opacity: [0.1, 1],\r\n            width: [\"2vw\", \"6vw\"],\r\n            delay: anime.stagger(300),\r\n            duration: 3000,\r\n            autoplay: true,\r\n            easing: 'easeInQuad',\r\n            loop: true,\r\n            endDelay: -100,\r\n        })\r\n    }, [])\r\n    return (\r\n        <div className=\"login\" >\r\n            <div id=\"svgWrapper\">\r\n                <svg id=\"spot\" viewBox=\"0 0 500 200\" preserveAspectRatio=\"xMinYMin meet\" fill=\"none\"> {/* svg was made using figma */}\r\n                    <mask id=\"path-1-outside-1\" maskUnits=\"userSpaceOnUse\" x=\"0.639999\" y=\"0.799988\" width=\"489\" height=\"89\" fill=\"black\">\r\n                        <rect fill=\"white\" x=\"0.639999\" y=\"0.799988\" width=\"489\" height=\"89\"/>\r\n                        <path d=\"M21.08 88.2C14.68 88.2 9.84 86.4 6.56 82.8C3.28 79.12 1.64 73.88 1.64 67.08V62.28H14.12V68.04C14.12 73.48 16.4 76.2 20.96 76.2C23.2 76.2 24.88 75.56 26 74.28C27.2 72.92 27.8 70.76 27.8 67.8C27.8 64.28 27 61.2 25.4 58.56C23.8 55.84 20.84 52.6 16.52 48.84C11.08 44.04 7.28 39.72 5.12 35.88C2.96 31.96 1.88 27.56 1.88 22.68C1.88 16.04 3.56 10.92 6.92 7.31999C10.28 3.63999 15.16 1.79999 21.56 1.79999C27.88 1.79999 32.64 3.63999 35.84 7.31999C39.12 10.92 40.76 16.12 40.76 22.92V26.4H28.28V22.08C28.28 19.2 27.72 17.12 26.6 15.84C25.48 14.48 23.84 13.8 21.68 13.8C17.28 13.8 15.08 16.48 15.08 21.84C15.08 24.88 15.88 27.72 17.48 30.36C19.16 33 22.16 36.2 26.48 39.96C32 44.76 35.8 49.12 37.88 53.04C39.96 56.96 41 61.56 41 66.84C41 73.72 39.28 79 35.84 82.68C32.48 86.36 27.56 88.2 21.08 88.2Z\"/>\r\n                        <path d=\"M48.5684 2.99999H68.0084C74.5684 2.99999 79.4884 4.75999 82.7684 8.27999C86.0484 11.8 87.6884 16.96 87.6884 23.76V32.04C87.6884 38.84 86.0484 44 82.7684 47.52C79.4884 51.04 74.5684 52.8 68.0084 52.8H61.7684V87H48.5684V2.99999ZM68.0084 40.8C70.1684 40.8 71.7684 40.2 72.8084 39C73.9284 37.8 74.4884 35.76 74.4884 32.88V22.92C74.4884 20.04 73.9284 18 72.8084 16.8C71.7684 15.6 70.1684 15 68.0084 15H61.7684V40.8H68.0084Z\"/>\r\n                        <path d=\"M113.938 88.2C107.457 88.2 102.498 86.36 99.0575 82.68C95.6175 79 93.8975 73.8 93.8975 67.08V22.92C93.8975 16.2 95.6175 11 99.0575 7.31999C102.498 3.63999 107.457 1.79999 113.938 1.79999C120.418 1.79999 125.378 3.63999 128.818 7.31999C132.258 11 133.978 16.2 133.978 22.92V67.08C133.978 73.8 132.258 79 128.818 82.68C125.378 86.36 120.418 88.2 113.938 88.2ZM113.938 76.2C118.497 76.2 120.777 73.44 120.777 67.92V22.08C120.777 16.56 118.497 13.8 113.938 13.8C109.378 13.8 107.098 16.56 107.098 22.08V67.92C107.098 73.44 109.378 76.2 113.938 76.2Z\"/>\r\n                        <path d=\"M152.756 15H138.956V2.99999H179.756V15H165.956V87H152.756V15Z\"/>\r\n                        <path d=\"M186.147 2.99999H199.347V87H186.147V2.99999Z\"/>\r\n                        <path d=\"M209.232 2.99999H244.152V15H222.432V38.4H239.473V50.4H222.432V87H209.232V2.99999Z\"/>\r\n                        <path d=\"M262.602 51.24L246.643 2.99999H260.682L269.682 33.84H269.923L278.923 2.99999H291.762L275.802 51.24V87H262.602V51.24Z\"/>\r\n                        <path d=\"M316.928 2.99999H337.088C343.648 2.99999 348.568 4.75999 351.848 8.27999C355.128 11.8 356.768 16.96 356.768 23.76V66.24C356.768 73.04 355.128 78.2 351.848 81.72C348.568 85.24 343.648 87 337.088 87H316.928V2.99999ZM336.848 75C339.008 75 340.648 74.36 341.768 73.08C342.968 71.8 343.568 69.72 343.568 66.84V23.16C343.568 20.28 342.968 18.2 341.768 16.92C340.648 15.64 339.008 15 336.848 15H330.128V75H336.848Z\"/>\r\n                        <path d=\"M375.643 2.99999H393.523L407.203 87H394.003L391.603 70.32V70.56H376.603L374.203 87H361.963L375.643 2.99999ZM390.043 59.16L384.163 17.64H383.923L378.163 59.16H390.043Z\"/>\r\n                        <path d=\"M418.42 15H404.62V2.99999H445.42V15H431.62V87H418.42V15Z\"/>\r\n                        <path d=\"M456.503 2.99999H474.383L488.063 87H474.863L472.463 70.32V70.56H457.463L455.063 87H442.823L456.503 2.99999ZM470.903 59.16L465.023 17.64H464.783L459.023 59.16H470.903Z\"/>\r\n                    </mask>\r\n                    <path d=\"M21.08 88.2C14.68 88.2 9.84 86.4 6.56 82.8C3.28 79.12 1.64 73.88 1.64 67.08V62.28H14.12V68.04C14.12 73.48 16.4 76.2 20.96 76.2C23.2 76.2 24.88 75.56 26 74.28C27.2 72.92 27.8 70.76 27.8 67.8C27.8 64.28 27 61.2 25.4 58.56C23.8 55.84 20.84 52.6 16.52 48.84C11.08 44.04 7.28 39.72 5.12 35.88C2.96 31.96 1.88 27.56 1.88 22.68C1.88 16.04 3.56 10.92 6.92 7.31999C10.28 3.63999 15.16 1.79999 21.56 1.79999C27.88 1.79999 32.64 3.63999 35.84 7.31999C39.12 10.92 40.76 16.12 40.76 22.92V26.4H28.28V22.08C28.28 19.2 27.72 17.12 26.6 15.84C25.48 14.48 23.84 13.8 21.68 13.8C17.28 13.8 15.08 16.48 15.08 21.84C15.08 24.88 15.88 27.72 17.48 30.36C19.16 33 22.16 36.2 26.48 39.96C32 44.76 35.8 49.12 37.88 53.04C39.96 56.96 41 61.56 41 66.84C41 73.72 39.28 79 35.84 82.68C32.48 86.36 27.56 88.2 21.08 88.2Z\" stroke=\"#1DB954\" strokeWidth=\"2\" mask=\"url(#path-1-outside-1)\"/>\r\n                    <path d=\"M48.5684 2.99999H68.0084C74.5684 2.99999 79.4884 4.75999 82.7684 8.27999C86.0484 11.8 87.6884 16.96 87.6884 23.76V32.04C87.6884 38.84 86.0484 44 82.7684 47.52C79.4884 51.04 74.5684 52.8 68.0084 52.8H61.7684V87H48.5684V2.99999ZM68.0084 40.8C70.1684 40.8 71.7684 40.2 72.8084 39C73.9284 37.8 74.4884 35.76 74.4884 32.88V22.92C74.4884 20.04 73.9284 18 72.8084 16.8C71.7684 15.6 70.1684 15 68.0084 15H61.7684V40.8H68.0084Z\" stroke=\"#1DB954\" strokeWidth=\"2\" mask=\"url(#path-1-outside-1)\"/>\r\n                    <path d=\"M113.938 88.2C107.457 88.2 102.498 86.36 99.0575 82.68C95.6175 79 93.8975 73.8 93.8975 67.08V22.92C93.8975 16.2 95.6175 11 99.0575 7.31999C102.498 3.63999 107.457 1.79999 113.938 1.79999C120.418 1.79999 125.378 3.63999 128.818 7.31999C132.258 11 133.978 16.2 133.978 22.92V67.08C133.978 73.8 132.258 79 128.818 82.68C125.378 86.36 120.418 88.2 113.938 88.2ZM113.938 76.2C118.497 76.2 120.777 73.44 120.777 67.92V22.08C120.777 16.56 118.497 13.8 113.938 13.8C109.378 13.8 107.098 16.56 107.098 22.08V67.92C107.098 73.44 109.378 76.2 113.938 76.2Z\" stroke=\"#1DB954\" strokeWidth=\"2\" mask=\"url(#path-1-outside-1)\"/>\r\n                    <path d=\"M152.756 15H138.956V2.99999H179.756V15H165.956V87H152.756V15Z\" stroke=\"#1DB954\" strokeWidth=\"2\" mask=\"url(#path-1-outside-1)\"/>\r\n                    <path d=\"M186.147 2.99999H199.347V87H186.147V2.99999Z\" stroke=\"#1DB954\" strokeWidth=\"2\" mask=\"url(#path-1-outside-1)\"/>\r\n                    <path d=\"M209.232 2.99999H244.152V15H222.432V38.4H239.473V50.4H222.432V87H209.232V2.99999Z\" stroke=\"#1DB954\" strokeWidth=\"2\" mask=\"url(#path-1-outside-1)\"/>\r\n                    <path d=\"M262.602 51.24L246.643 2.99999H260.682L269.682 33.84H269.923L278.923 2.99999H291.762L275.802 51.24V87H262.602V51.24Z\" stroke=\"#1DB954\" strokeWidth=\"2\" mask=\"url(#path-1-outside-1)\"/>\r\n                    <path d=\"M316.928 2.99999H337.088C343.648 2.99999 348.568 4.75999 351.848 8.27999C355.128 11.8 356.768 16.96 356.768 23.76V66.24C356.768 73.04 355.128 78.2 351.848 81.72C348.568 85.24 343.648 87 337.088 87H316.928V2.99999ZM336.848 75C339.008 75 340.648 74.36 341.768 73.08C342.968 71.8 343.568 69.72 343.568 66.84V23.16C343.568 20.28 342.968 18.2 341.768 16.92C340.648 15.64 339.008 15 336.848 15H330.128V75H336.848Z\" stroke=\"#1DB954\" strokeWidth=\"2\" mask=\"url(#path-1-outside-1)\"/>\r\n                    <path d=\"M375.643 2.99999H393.523L407.203 87H394.003L391.603 70.32V70.56H376.603L374.203 87H361.963L375.643 2.99999ZM390.043 59.16L384.163 17.64H383.923L378.163 59.16H390.043Z\" stroke=\"#1DB954\" strokeWidth=\"2\" mask=\"url(#path-1-outside-1)\"/>\r\n                    <path d=\"M418.42 15H404.62V2.99999H445.42V15H431.62V87H418.42V15Z\" stroke=\"#1DB954\" strokeWidth=\"2\" mask=\"url(#path-1-outside-1)\"/>\r\n                    <path d=\"M456.503 2.99999H474.383L488.063 87H474.863L472.463 70.32V70.56H457.463L455.063 87H442.823L456.503 2.99999ZM470.903 59.16L465.023 17.64H464.783L459.023 59.16H470.903Z\" stroke=\"#1DB954\" strokeWidth=\"2\" mask=\"url(#path-1-outside-1)\"/>\r\n                </svg>\r\n                <button id=\"loginBtn\" onClick={redirect}>Login</button>\r\n            </div>\r\n            \r\n            {array.map((a, index) => <img src=\"https://upload.wikimedia.org/wikipedia/commons/1/19/Spotify_logo_without_text.svg\" key={index} className=\"floatingBubble\" style={{left: Math.random() * window.innerWidth, zIndex: -1}} alt=\"spotify logo\"/>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n\r\n","\r\nimport React, {useState, useEffect} from 'react'\r\n\r\nexport default function List(props){\r\n    console.log(\"render list\")\r\n    return (\r\n        <div className=\"itemList\">\r\n            {props.search === \"Tracks\" && props.data.map((data, index) => <SongListItem song={data} key={index} index={index}/>)}\r\n            {props.search === \"Artists\" &&  props.data.map((data, index) => <ArtistListItem artist={data} key={index} index={index} accessToken={props.accessToken}/>)}\r\n        </div>\r\n    )\r\n}\r\nconst useAudio = url => {\r\n    if(url){\r\n\r\n    }\r\n    const [audio] = useState(new Audio(url));\r\n    const [playing, setPlaying] = useState(false);\r\n  \r\n    const toggle = () => setPlaying(!playing);\r\n  \r\n    useEffect(() => {\r\n       if(url) playing ? audio.play() : audio.pause();\r\n    }, [playing]);\r\n  \r\n    useEffect(() => {\r\n        if(url){\r\n            audio.addEventListener('ended', () => setPlaying(false));\r\n            return () => {\r\n                audio.removeEventListener('ended', () => setPlaying(false));\r\n            };\r\n        }\r\n    }, [audio]);\r\n  \r\n    return [playing, toggle];\r\n};\r\n\r\nconst useFetch = (url, options) => {\r\n    \r\n    const [response, setResponse] = React.useState(null);\r\n    const [error, setError] = React.useState(null);\r\n    React.useEffect(() => {\r\n      const fetchData = async () => {\r\n        try {\r\n          const res = await fetch(url, options);\r\n          const json = await res.json();\r\n          setResponse(json);\r\n        } catch (error) {\r\n          setError(error);\r\n        }\r\n      };\r\n      fetchData();\r\n    }, []);\r\n    return { response, error };\r\n};\r\n\r\nfunction SongListItem(props){\r\n    const {album, name, artists, preview_url} = props.song;\r\n    console.log(props.song);\r\n    const [playing, toggle] = useAudio(preview_url);\r\n    return (\r\n        <>\r\n        <div className=\"ListItem\"  onClick={toggle}>\r\n            <img src={album.images[0].url} width=\"100%\" className=\"songImg\" alt=\"album cover\"/>\r\n            \r\n            <div className=\"songInfo\">\r\n                {preview_url ? <i style={{margin: \"0 15px\", fontSize: \"clamp(20px, 3vw, 40px)\"}} className={!playing ? \"fas fa-play\" : \"fas fa-pause\"} /> : null}\r\n                <div style={{marginLeft: \"1em\", flexDirection: \"column\"}}>\r\n                    <h1 style={{fontSize: \"clamp(20px, 5vw, 40px)\"}}>{name}</h1>\r\n                    <h2 style={{fontSize: \"clamp(15px, 3vw, 30px)\"}}>By: {artists[0].name}</h2>\r\n                    <h2 style={{fontSize: \"clamp(15px, 3vw, 30px)\"}}>Album: {album.name}</h2>\r\n                </div>\r\n                <h1 style={{marginLeft:\"auto\", marginRight: \"15px\", fontSize: \"xxx-large\"}}>#{props.index+1}</h1>\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nfunction ArtistListItem(props){\r\n    const {name, popularity, images, id, followers, genres} = props.artist;\r\n    const [isClicked, setIsClicked] = useState(false);\r\n    const handleClick = () => {\r\n        setIsClicked(!isClicked);\r\n    }\r\n    const url = `https://api.spotify.com/v1/artists/${id}/related-artists`\r\n    const {response, error} = useFetch(url, {\r\n        method: \"GET\",\r\n        headers: {\r\n        \"Authorization\": \"Bearer \" + props.accessToken,\r\n        }\r\n    })\r\n    if(!response) return <div>Loading...</div>\r\n    else if(error) return <div>Error: {error.message}</div>\r\n    return (\r\n        <>\r\n        <div onClick={handleClick} className=\"ListItem\" style={{perspective: \"1000px\"}}>\r\n            <div className={!isClicked ? \"flipCardInner\" : \"flipCardInner rotateItem\"}>\r\n                <div className=\"flipCardFront\">\r\n                    <img src={images[0].url}  width=\"100%\" className=\"artistImg\" alt=\"artist image\"/>\r\n                    <div className=\"artistInfo\" >\r\n                        <div style={{marginLeft: \"1em\", flexDirection: \"column\"}}>\r\n                            <h1>{name}</h1>\r\n                            <h2>More Info <i style={{color: \"#1DB954\"}} className=\"far fa-arrow-alt-circle-right\"></i></h2>\r\n                        </div>\r\n                        <h1 style={{marginLeft:\"auto\", marginRight: \"1em\", fontSize: \"xxx-large\"}}>#{props.index+1}</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"flipCardBack\">\r\n                <img src={images[0].url}  width=\"100%\" className=\"artistImg\" alt=\"artist image\"/>\r\n                    <div className=\"backArtistInfo\">\r\n                        <h1 style={{fontSize: \"3em\"}}>{name}</h1>\r\n                        <h2>Followers: {followers.total}</h2>\r\n                        <h2>Popularity: {popularity} out of 100</h2>\r\n                        <h2>Genres: <span> {genres.map((genre, index) => index !== genres.length-1 ? `${genre}, ` :  genre)} </span></h2>\r\n                        <h2>Related Artists: \r\n                            <ul style={{listStyle: 'inside', textAlign: 'left', marginLeft: \"25%\", marginTop: \"0px\"}}>\r\n                                {response.artists.map((artist, index) => index < 5 ? <li key={index}>{artist.name}</li> : null)}\r\n                            </ul>\r\n                        </h2>\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>  \r\n        </>\r\n    )\r\n}","import React, {useEffect, useState} from 'react'\r\nimport List from \"./List\"\r\n\r\nconst useFetch = (url, options) => {\r\n    console.log(\"used fetch\")\r\n    const [response, setResponse] = React.useState(null);\r\n    const [error, setError] = React.useState(null);\r\n    React.useEffect(() => {\r\n      const fetchData = async () => {\r\n        try {\r\n          const res = await fetch(url, options);\r\n          const json = await res.json();\r\n          setResponse(json);\r\n        } catch (error) {\r\n          setError(error);\r\n        }\r\n      };\r\n      fetchData();\r\n    }, []);\r\n    return { response, error };\r\n};\r\n\r\nfunction Reccomendations(props) {//need ids\r\n    // const ids = []//props.songs.items.map((song, index) => index < 5 ? song.id : undefined);\r\n    // for(let i = 0; i < 1; i++){\r\n    //     ids.push(props.songs.items[i].id)\r\n    // }\r\n    // console.log(String(ids))\r\n    // const url = \"https://api.spotify.com/v1/recommendations?seed_tracks=\"\r\n    // const {reponse, error} = useFetch(url + String(ids), {\r\n    //     method: \"GET\",\r\n    //     headers: {\r\n    //     \"Authorization\": \"Bearer \" + props.accessToken,\r\n    //     }\r\n    // })\r\n    const [reccomendations, setReccomendations] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const ids = [];\r\n        for(let i = 0; i < 5; i++){\r\n            ids.push(props.songs.items[i].id)\r\n        }\r\n        const url = \"https://api.spotify.com/v1/recommendations?seed_tracks=\" + String(ids);\r\n        fetch(url, {\r\n            method: \"GET\",\r\n            headers: {\r\n            \"Authorization\": \"Bearer \" + props.accessToken,\r\n            }\r\n        })\r\n        .then(response => response.json())\r\n        .then(json => setReccomendations(json));\r\n    }, [props.songs.items])\r\n    if(!reccomendations) return <div>Loading...</div>\r\n    return (\r\n        <div style={{textAlign: 'center', color: \"#fff\", marginTop: \"calc(80px + 1em)\"}}>\r\n            {/* {console.log(reccomendations)} */}\r\n            <h1 style={{margin: \"1em 0\"}}>Songs you might like</h1>\r\n            <h3 style={{margin: \"0 0 1em 0\"}}>Based on your top 5 songs</h3>\r\n            <List data={reccomendations.tracks} search=\"Tracks\" accessToken={props.accessToken}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Reccomendations\r\n","import React, { Component } from 'react'\r\nimport Chart from \"chart.js\";\r\nChart.defaults.global.defaultFontColor = \"white\";\r\n//let chart;\r\nclass PopularityChart extends Component {\r\n    \r\n    constructor(props){\r\n        super(props);\r\n        this.canvasRef = React.createRef();\r\n    }\r\n    \r\n    componentDidMount(){\r\n        let artists = this.props.data;\r\n        artists.sort((a, b) => { //sort by popularity\r\n            if(a.popularity > b.popularity) return -1;\r\n            else if(a.popularity < b.popularity) return 1;\r\n            return 0;\r\n        });\r\n        let popularityData = [];\r\n        let artistNames = [];\r\n        let colors = [];\r\n        let hue = 143;\r\n        let lightness = 73;\r\n        artists.forEach(artist => { \r\n            popularityData.push(artist.popularity);\r\n            artistNames.push(artist.name);\r\n            colors.push(`hsl(${hue += 0}, 75%, ${lightness -= 3}%)`);\r\n            //colors.push(`rgba(${Math.random()*256}, ${Math.random()*256}, ${Math.random()*256}, 0.7)`)\r\n        });\r\n        this.chart = new Chart(this.canvasRef.current, {\r\n            type: \"horizontalBar\",\r\n            data: {\r\n                datasets: [{\r\n                    data: popularityData,//artist popularity\r\n                    backgroundColor: colors,\r\n                    barThickness: \"flex\"\r\n                }],\r\n                labels: artistNames, //artist names\r\n            },\r\n            options: {\r\n                responsive: true,\r\n                maintainAspectRatio: false,\r\n                legend: {\r\n                    display: false,\r\n                },\r\n                scales: {\r\n                    yAxes: [{\r\n                        ticks: {\r\n                            min: 0,\r\n                            max: 100,\r\n                            //fontSize: 7,\r\n                            padding: 15\r\n                        \r\n                        }\r\n                    }],\r\n                    xAxes: [{\r\n                        ticks: {\r\n                            //fontSize: 20\r\n                        }\r\n                    }]\r\n                },\r\n                title: {\r\n                    display: false,\r\n                    text: \"Your Top Songs by Current Popularity\",\r\n                    fontSize: 50 \r\n                },\r\n                tooltips: {\r\n                    //titleFontSize: 20\r\n                }\r\n            }\r\n        });\r\n    }\r\n    componentWillUnmount(){\r\n        console.log(\"chart updated\")\r\n        this.chart.destroy();\r\n    }\r\n    \r\n    render(){\r\n        return (\r\n            <div id=\"canvasContainer\">\r\n                <canvas id=\"canvas\" ref={this.canvasRef}/>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\n\r\n\r\nexport default PopularityChart\r\n","import React, {useState, useEffect} from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport Navbar from \"./Navbar\";\nimport Login from \"./Login\";\nimport Reccomendations from \"./Reccomendations\";\nimport './App.css';\nimport PopularityChart from \"./PopularityChart\";\nimport List from \"./List\"\n\nfunction App() {\n  const [access_token, setAccess_token] = useState(\"\");\n  const [songs, setSongs] = useState(null);\n  const [artists, setArtists] = useState(null);\n  useEffect(() => {\n    const afterHash = window.location.hash.substring(1); //get hash value\n    const hashes = afterHash.split(\"&\").map(hash => hash.split(\"=\"))//split hash string into property, value pairs\n    setAccess_token(hashes[0][1]);\n  }, [])\n  \n\n  useEffect(() => {\n    if(access_token){\n      fetch(\"https://api.spotify.com/v1/me/top/tracks?time_range=medium_term\", {\n        method: \"GET\",\n        headers: {\n        \"Authorization\": \"Bearer \" + access_token,\n        }\n      })\n      .then(response => response.json())\n      .then(json => setSongs(json))\n\n      fetch(\"https://api.spotify.com/v1/me/top/artists?time_range=medium_term\", {\n        method: \"GET\",\n        headers: {\n        \"Authorization\": \"Bearer \" + access_token,\n        }\n      })\n      .then(response => response.json())\n      .then(json => setArtists(json))\n    }\n  }, [access_token])\n\n  \n  return (\n    artists && songs ? (//if data has been recieved\n      <Router basename=\"Spotify-Data\">\n        {console.log(songs, artists)}\n        {console.log(\"set Access token to: \" + access_token)}\n        <div>\n          <Navbar/>\n          <Switch>\n            <Route exact path=\"/\" >\n              <div style={{textAlign: 'center', color: \"#fff\", marginTop: \"calc(80px + 1em)\"}}>\n                <h1 >Your Top {songs.items.length} Tracks Ranked By Popularity</h1>\n                <PopularityChart data={songs.items}/>\n                <h1 style={{textAlign: 'center', margin: '1em 0'}}>Your Top {songs.length} Songs In Order</h1>\n                <List data={songs.items} search=\"Tracks\" accessToken={access_token}/>\n              </div>\n            </Route>\n            <Route path=\"/topArtists\">\n              <div style={{textAlign: 'center', color: \"#fff\", marginTop: \"calc(80px + 1em)\"}}>\n                <h1 >Your Top {artists.items.length} Artists Ranked By Popularity</h1>\n                <PopularityChart data={artists.items}/>\n                <h1 style={{textAlign: 'center', margin: '1em 0'}}>Your Top {artists.length} Artists In Order</h1>\n                <List data={artists.items} search=\"Artists\" accessToken={access_token}/>\n              </div>\n            </Route>\n            <Route path=\"/reccomendations\">\n              <Reccomendations songs={songs} artists={artists} accessToken={access_token}/>\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    )\n    : (//else display login page\n      <Login />\n    )\n    \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}